// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.0
// source: protos/microfrontends_v1.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Category      string            `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Code          string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	CorrelationId string            `protobuf:"bytes,4,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status        string            `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Message       string            `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Cause         string            `protobuf:"bytes,7,opt,name=cause,proto3" json:"cause,omitempty"`
	StackTrace    string            `protobuf:"bytes,8,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	Details       map[string]string `protobuf:"bytes,9,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ErrorDescription) Reset() {
	*x = ErrorDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_microfrontends_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDescription) ProtoMessage() {}

func (x *ErrorDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_microfrontends_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDescription.ProtoReflect.Descriptor instead.
func (*ErrorDescription) Descriptor() ([]byte, []int) {
	return file_protos_microfrontends_v1_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorDescription) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ErrorDescription) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ErrorDescription) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorDescription) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ErrorDescription) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ErrorDescription) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorDescription) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

func (x *ErrorDescription) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

func (x *ErrorDescription) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

type PagingParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skip  int64 `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Take  int32 `protobuf:"varint,2,opt,name=take,proto3" json:"take,omitempty"`
	Total bool  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PagingParams) Reset() {
	*x = PagingParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_microfrontends_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingParams) ProtoMessage() {}

func (x *PagingParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_microfrontends_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingParams.ProtoReflect.Descriptor instead.
func (*PagingParams) Descriptor() ([]byte, []int) {
	return file_protos_microfrontends_v1_proto_rawDescGZIP(), []int{1}
}

func (x *PagingParams) GetSkip() int64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *PagingParams) GetTake() int32 {
	if x != nil {
		return x.Take
	}
	return 0
}

func (x *PagingParams) GetTotal() bool {
	if x != nil {
		return x.Total
	}
	return false
}

type Microfrontend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PathPrefix    string            `protobuf:"bytes,4,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	Icon          string            `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Type          string            `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	RemoteEntry   string            `protobuf:"bytes,7,opt,name=remote_entry,json=remoteEntry,proto3" json:"remote_entry,omitempty"`
	ExposedModule string            `protobuf:"bytes,8,opt,name=exposed_module,json=exposedModule,proto3" json:"exposed_module,omitempty"`
	ElementName   string            `protobuf:"bytes,9,opt,name=element_name,json=elementName,proto3" json:"element_name,omitempty"`
	Params        map[string]string `protobuf:"bytes,10,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Microfrontend) Reset() {
	*x = Microfrontend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_microfrontends_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Microfrontend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Microfrontend) ProtoMessage() {}

func (x *Microfrontend) ProtoReflect() protoreflect.Message {
	mi := &file_protos_microfrontends_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Microfrontend.ProtoReflect.Descriptor instead.
func (*Microfrontend) Descriptor() ([]byte, []int) {
	return file_protos_microfrontends_v1_proto_rawDescGZIP(), []int{2}
}

func (x *Microfrontend) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Microfrontend) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Microfrontend) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Microfrontend) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *Microfrontend) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Microfrontend) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Microfrontend) GetRemoteEntry() string {
	if x != nil {
		return x.RemoteEntry
	}
	return ""
}

func (x *Microfrontend) GetExposedModule() string {
	if x != nil {
		return x.ExposedModule
	}
	return ""
}

func (x *Microfrontend) GetElementName() string {
	if x != nil {
		return x.ElementName
	}
	return ""
}

func (x *Microfrontend) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type MicrofrontendPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*Microfrontend `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MicrofrontendPage) Reset() {
	*x = MicrofrontendPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_microfrontends_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicrofrontendPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicrofrontendPage) ProtoMessage() {}

func (x *MicrofrontendPage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_microfrontends_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicrofrontendPage.ProtoReflect.Descriptor instead.
func (*MicrofrontendPage) Descriptor() ([]byte, []int) {
	return file_protos_microfrontends_v1_proto_rawDescGZIP(), []int{3}
}

func (x *MicrofrontendPage) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MicrofrontendPage) GetData() []*Microfrontend {
	if x != nil {
		return x.Data
	}
	return nil
}

// The request message containing the microfrontend page request.
type MicrofrontendPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string            `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Filter        map[string]string `protobuf:"bytes,2,rep,name=filter,proto3" json:"filter,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Paging        *PagingParams     `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *MicrofrontendPageRequest) Reset() {
	*x = MicrofrontendPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_microfrontends_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicrofrontendPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicrofrontendPageRequest) ProtoMessage() {}

func (x *MicrofrontendPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_microfrontends_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicrofrontendPageRequest.ProtoReflect.Descriptor instead.
func (*MicrofrontendPageRequest) Descriptor() ([]byte, []int) {
	return file_protos_microfrontends_v1_proto_rawDescGZIP(), []int{4}
}

func (x *MicrofrontendPageRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *MicrofrontendPageRequest) GetFilter() map[string]string {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *MicrofrontendPageRequest) GetPaging() *PagingParams {
	if x != nil {
		return x.Paging
	}
	return nil
}

// The response message containing the microfrontend page response
type MicrofrontendPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorDescription  `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Page  *MicrofrontendPage `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *MicrofrontendPageReply) Reset() {
	*x = MicrofrontendPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_microfrontends_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicrofrontendPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicrofrontendPageReply) ProtoMessage() {}

func (x *MicrofrontendPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_microfrontends_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicrofrontendPageReply.ProtoReflect.Descriptor instead.
func (*MicrofrontendPageReply) Descriptor() ([]byte, []int) {
	return file_protos_microfrontends_v1_proto_rawDescGZIP(), []int{5}
}

func (x *MicrofrontendPageReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *MicrofrontendPageReply) GetPage() *MicrofrontendPage {
	if x != nil {
		return x.Page
	}
	return nil
}

// The request message containing the microfrontend id request.
type MicrofrontendIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId   string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	MicrofrontendId string `protobuf:"bytes,2,opt,name=microfrontend_id,json=microfrontendId,proto3" json:"microfrontend_id,omitempty"`
}

func (x *MicrofrontendIdRequest) Reset() {
	*x = MicrofrontendIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_microfrontends_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicrofrontendIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicrofrontendIdRequest) ProtoMessage() {}

func (x *MicrofrontendIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_microfrontends_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicrofrontendIdRequest.ProtoReflect.Descriptor instead.
func (*MicrofrontendIdRequest) Descriptor() ([]byte, []int) {
	return file_protos_microfrontends_v1_proto_rawDescGZIP(), []int{6}
}

func (x *MicrofrontendIdRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *MicrofrontendIdRequest) GetMicrofrontendId() string {
	if x != nil {
		return x.MicrofrontendId
	}
	return ""
}

// The request message containing the microfrontend object request.
type MicrofrontendObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string         `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Microfrontend *Microfrontend `protobuf:"bytes,2,opt,name=microfrontend,proto3" json:"microfrontend,omitempty"`
}

func (x *MicrofrontendObjectRequest) Reset() {
	*x = MicrofrontendObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_microfrontends_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicrofrontendObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicrofrontendObjectRequest) ProtoMessage() {}

func (x *MicrofrontendObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_microfrontends_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicrofrontendObjectRequest.ProtoReflect.Descriptor instead.
func (*MicrofrontendObjectRequest) Descriptor() ([]byte, []int) {
	return file_protos_microfrontends_v1_proto_rawDescGZIP(), []int{7}
}

func (x *MicrofrontendObjectRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *MicrofrontendObjectRequest) GetMicrofrontend() *Microfrontend {
	if x != nil {
		return x.Microfrontend
	}
	return nil
}

// The response message containing the microfrontend object response
type MicrofrontendObjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Microfrontend *Microfrontend    `protobuf:"bytes,2,opt,name=microfrontend,proto3" json:"microfrontend,omitempty"`
}

func (x *MicrofrontendObjectReply) Reset() {
	*x = MicrofrontendObjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_microfrontends_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicrofrontendObjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicrofrontendObjectReply) ProtoMessage() {}

func (x *MicrofrontendObjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_microfrontends_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicrofrontendObjectReply.ProtoReflect.Descriptor instead.
func (*MicrofrontendObjectReply) Descriptor() ([]byte, []int) {
	return file_protos_microfrontends_v1_proto_rawDescGZIP(), []int{8}
}

func (x *MicrofrontendObjectReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *MicrofrontendObjectReply) GetMicrofrontend() *Microfrontend {
	if x != nil {
		return x.Microfrontend
	}
	return nil
}

var File_protos_microfrontends_v1_proto protoreflect.FileDescriptor

var file_protos_microfrontends_v1_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73,
	0x5f, 0x76, 0x31, 0x22, 0xee, 0x02, 0x0a, 0x10, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76,
	0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c, 0x0a, 0x0c, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6b, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x8c, 0x03, 0x0a, 0x0d, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65,
	0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x44, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x73, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x5f, 0x0a, 0x11, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x4d,
	0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x86, 0x02, 0x0a, 0x18, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8d, 0x01, 0x0a, 0x16,
	0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x38, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73,
	0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x16, 0x4d,
	0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x1a, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x46, 0x0a,
	0x0d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x0d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x18, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a,
	0x0d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x0d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x32, 0xd9, 0x04, 0x0a, 0x0e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x6e, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x2b,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f,
	0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e,
	0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x5f,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x79,
	0x5f, 0x69, 0x64, 0x12, 0x29, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f,
	0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x74, 0x0a,
	0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x2d, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x2d, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e,
	0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x4d,
	0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x1a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x29, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x67, 0x0a, 0x2a, 0x70, 0x69, 0x70, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x31, 0x42,
	0x15, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0xa2, 0x02, 0x15, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x46, 0x52, 0x4f, 0x4e, 0x54, 0x45,
	0x4e, 0x44, 0x53, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protos_microfrontends_v1_proto_rawDescOnce sync.Once
	file_protos_microfrontends_v1_proto_rawDescData = file_protos_microfrontends_v1_proto_rawDesc
)

func file_protos_microfrontends_v1_proto_rawDescGZIP() []byte {
	file_protos_microfrontends_v1_proto_rawDescOnce.Do(func() {
		file_protos_microfrontends_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_microfrontends_v1_proto_rawDescData)
	})
	return file_protos_microfrontends_v1_proto_rawDescData
}

var file_protos_microfrontends_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_protos_microfrontends_v1_proto_goTypes = []interface{}{
	(*ErrorDescription)(nil),           // 0: microfrontends_v1.ErrorDescription
	(*PagingParams)(nil),               // 1: microfrontends_v1.PagingParams
	(*Microfrontend)(nil),              // 2: microfrontends_v1.Microfrontend
	(*MicrofrontendPage)(nil),          // 3: microfrontends_v1.MicrofrontendPage
	(*MicrofrontendPageRequest)(nil),   // 4: microfrontends_v1.MicrofrontendPageRequest
	(*MicrofrontendPageReply)(nil),     // 5: microfrontends_v1.MicrofrontendPageReply
	(*MicrofrontendIdRequest)(nil),     // 6: microfrontends_v1.MicrofrontendIdRequest
	(*MicrofrontendObjectRequest)(nil), // 7: microfrontends_v1.MicrofrontendObjectRequest
	(*MicrofrontendObjectReply)(nil),   // 8: microfrontends_v1.MicrofrontendObjectReply
	nil,                                // 9: microfrontends_v1.ErrorDescription.DetailsEntry
	nil,                                // 10: microfrontends_v1.Microfrontend.ParamsEntry
	nil,                                // 11: microfrontends_v1.MicrofrontendPageRequest.FilterEntry
}
var file_protos_microfrontends_v1_proto_depIdxs = []int32{
	9,  // 0: microfrontends_v1.ErrorDescription.details:type_name -> microfrontends_v1.ErrorDescription.DetailsEntry
	10, // 1: microfrontends_v1.Microfrontend.params:type_name -> microfrontends_v1.Microfrontend.ParamsEntry
	2,  // 2: microfrontends_v1.MicrofrontendPage.data:type_name -> microfrontends_v1.Microfrontend
	11, // 3: microfrontends_v1.MicrofrontendPageRequest.filter:type_name -> microfrontends_v1.MicrofrontendPageRequest.FilterEntry
	1,  // 4: microfrontends_v1.MicrofrontendPageRequest.paging:type_name -> microfrontends_v1.PagingParams
	0,  // 5: microfrontends_v1.MicrofrontendPageReply.error:type_name -> microfrontends_v1.ErrorDescription
	3,  // 6: microfrontends_v1.MicrofrontendPageReply.page:type_name -> microfrontends_v1.MicrofrontendPage
	2,  // 7: microfrontends_v1.MicrofrontendObjectRequest.microfrontend:type_name -> microfrontends_v1.Microfrontend
	0,  // 8: microfrontends_v1.MicrofrontendObjectReply.error:type_name -> microfrontends_v1.ErrorDescription
	2,  // 9: microfrontends_v1.MicrofrontendObjectReply.microfrontend:type_name -> microfrontends_v1.Microfrontend
	4,  // 10: microfrontends_v1.Microfrontends.get_microfrontends:input_type -> microfrontends_v1.MicrofrontendPageRequest
	6,  // 11: microfrontends_v1.Microfrontends.get_microfrontend_by_id:input_type -> microfrontends_v1.MicrofrontendIdRequest
	7,  // 12: microfrontends_v1.Microfrontends.create_microfrontend:input_type -> microfrontends_v1.MicrofrontendObjectRequest
	7,  // 13: microfrontends_v1.Microfrontends.update_microfrontend:input_type -> microfrontends_v1.MicrofrontendObjectRequest
	6,  // 14: microfrontends_v1.Microfrontends.delete_microfrontend_by_id:input_type -> microfrontends_v1.MicrofrontendIdRequest
	5,  // 15: microfrontends_v1.Microfrontends.get_microfrontends:output_type -> microfrontends_v1.MicrofrontendPageReply
	8,  // 16: microfrontends_v1.Microfrontends.get_microfrontend_by_id:output_type -> microfrontends_v1.MicrofrontendObjectReply
	8,  // 17: microfrontends_v1.Microfrontends.create_microfrontend:output_type -> microfrontends_v1.MicrofrontendObjectReply
	8,  // 18: microfrontends_v1.Microfrontends.update_microfrontend:output_type -> microfrontends_v1.MicrofrontendObjectReply
	8,  // 19: microfrontends_v1.Microfrontends.delete_microfrontend_by_id:output_type -> microfrontends_v1.MicrofrontendObjectReply
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_protos_microfrontends_v1_proto_init() }
func file_protos_microfrontends_v1_proto_init() {
	if File_protos_microfrontends_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_microfrontends_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_microfrontends_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_microfrontends_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Microfrontend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_microfrontends_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MicrofrontendPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_microfrontends_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MicrofrontendPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_microfrontends_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MicrofrontendPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_microfrontends_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MicrofrontendIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_microfrontends_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MicrofrontendObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_microfrontends_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MicrofrontendObjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_microfrontends_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_microfrontends_v1_proto_goTypes,
		DependencyIndexes: file_protos_microfrontends_v1_proto_depIdxs,
		MessageInfos:      file_protos_microfrontends_v1_proto_msgTypes,
	}.Build()
	File_protos_microfrontends_v1_proto = out.File
	file_protos_microfrontends_v1_proto_rawDesc = nil
	file_protos_microfrontends_v1_proto_goTypes = nil
	file_protos_microfrontends_v1_proto_depIdxs = nil
}
